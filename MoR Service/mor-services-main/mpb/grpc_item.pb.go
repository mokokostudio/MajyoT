// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: grpc_item.proto

package mpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqUpgradeBaseEquipStar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint64              `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EquiptType EItem_BaseEquipType `protobuf:"varint,2,opt,name=equipt_type,json=equiptType,proto3,enum=mpb.EItem_BaseEquipType" json:"equipt_type,omitempty"`
	CurStar    uint32              `protobuf:"varint,3,opt,name=cur_star,json=curStar,proto3" json:"cur_star,omitempty"`
}

func (x *ReqUpgradeBaseEquipStar) Reset() {
	*x = ReqUpgradeBaseEquipStar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpgradeBaseEquipStar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpgradeBaseEquipStar) ProtoMessage() {}

func (x *ReqUpgradeBaseEquipStar) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpgradeBaseEquipStar.ProtoReflect.Descriptor instead.
func (*ReqUpgradeBaseEquipStar) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{0}
}

func (x *ReqUpgradeBaseEquipStar) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqUpgradeBaseEquipStar) GetEquiptType() EItem_BaseEquipType {
	if x != nil {
		return x.EquiptType
	}
	return EItem_BaseEquipType_None
}

func (x *ReqUpgradeBaseEquipStar) GetCurStar() uint32 {
	if x != nil {
		return x.CurStar
	}
	return 0
}

type ResUpgradeBaseEquipStar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewStar uint32 `protobuf:"varint,2,opt,name=new_star,json=newStar,proto3" json:"new_star,omitempty"`
}

func (x *ResUpgradeBaseEquipStar) Reset() {
	*x = ResUpgradeBaseEquipStar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpgradeBaseEquipStar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpgradeBaseEquipStar) ProtoMessage() {}

func (x *ResUpgradeBaseEquipStar) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpgradeBaseEquipStar.ProtoReflect.Descriptor instead.
func (*ResUpgradeBaseEquipStar) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{1}
}

func (x *ResUpgradeBaseEquipStar) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResUpgradeBaseEquipStar) GetNewStar() uint32 {
	if x != nil {
		return x.NewStar
	}
	return 0
}

type ReqUpgradeBaseEquipLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint64              `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EquiptType EItem_BaseEquipType `protobuf:"varint,2,opt,name=equipt_type,json=equiptType,proto3,enum=mpb.EItem_BaseEquipType" json:"equipt_type,omitempty"`
	CurLevel   uint32              `protobuf:"varint,3,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
}

func (x *ReqUpgradeBaseEquipLevel) Reset() {
	*x = ReqUpgradeBaseEquipLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpgradeBaseEquipLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpgradeBaseEquipLevel) ProtoMessage() {}

func (x *ReqUpgradeBaseEquipLevel) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpgradeBaseEquipLevel.ProtoReflect.Descriptor instead.
func (*ReqUpgradeBaseEquipLevel) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{2}
}

func (x *ReqUpgradeBaseEquipLevel) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqUpgradeBaseEquipLevel) GetEquiptType() EItem_BaseEquipType {
	if x != nil {
		return x.EquiptType
	}
	return EItem_BaseEquipType_None
}

func (x *ReqUpgradeBaseEquipLevel) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

type ResUpgradeBaseEquipLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewLevel uint32 `protobuf:"varint,2,opt,name=new_level,json=newLevel,proto3" json:"new_level,omitempty"`
}

func (x *ResUpgradeBaseEquipLevel) Reset() {
	*x = ResUpgradeBaseEquipLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpgradeBaseEquipLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpgradeBaseEquipLevel) ProtoMessage() {}

func (x *ResUpgradeBaseEquipLevel) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpgradeBaseEquipLevel.ProtoReflect.Descriptor instead.
func (*ResUpgradeBaseEquipLevel) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{3}
}

func (x *ResUpgradeBaseEquipLevel) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResUpgradeBaseEquipLevel) GetNewLevel() uint32 {
	if x != nil {
		return x.NewLevel
	}
	return 0
}

type ReqExchangeItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint64            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AddItems       []*Item           `protobuf:"bytes,2,rep,name=add_items,json=addItems,proto3" json:"add_items,omitempty"`
	DelItems       []*Item           `protobuf:"bytes,3,rep,name=del_items,json=delItems,proto3" json:"del_items,omitempty"`
	DeltaMana      int32             `protobuf:"varint,4,opt,name=delta_mana,json=deltaMana,proto3" json:"delta_mana,omitempty"`
	TransReason    EItem_TransReason `protobuf:"varint,5,opt,name=trans_reason,json=transReason,proto3,enum=mpb.EItem_TransReason" json:"trans_reason,omitempty"`
	TransSubReason uint64            `protobuf:"varint,6,opt,name=trans_sub_reason,json=transSubReason,proto3" json:"trans_sub_reason,omitempty"`
}

func (x *ReqExchangeItems) Reset() {
	*x = ReqExchangeItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqExchangeItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqExchangeItems) ProtoMessage() {}

func (x *ReqExchangeItems) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqExchangeItems.ProtoReflect.Descriptor instead.
func (*ReqExchangeItems) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{4}
}

func (x *ReqExchangeItems) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqExchangeItems) GetAddItems() []*Item {
	if x != nil {
		return x.AddItems
	}
	return nil
}

func (x *ReqExchangeItems) GetDelItems() []*Item {
	if x != nil {
		return x.DelItems
	}
	return nil
}

func (x *ReqExchangeItems) GetDeltaMana() int32 {
	if x != nil {
		return x.DeltaMana
	}
	return 0
}

func (x *ReqExchangeItems) GetTransReason() EItem_TransReason {
	if x != nil {
		return x.TransReason
	}
	return EItem_TransReason_None
}

func (x *ReqExchangeItems) GetTransSubReason() uint64 {
	if x != nil {
		return x.TransSubReason
	}
	return 0
}

type ResExchangeItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddItems    []*Item `protobuf:"bytes,1,rep,name=add_items,json=addItems,proto3" json:"add_items,omitempty"`
	DelItems    []*Item `protobuf:"bytes,2,rep,name=del_items,json=delItems,proto3" json:"del_items,omitempty"`
	UpdateItems []*Item `protobuf:"bytes,3,rep,name=update_items,json=updateItems,proto3" json:"update_items,omitempty"`
}

func (x *ResExchangeItems) Reset() {
	*x = ResExchangeItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResExchangeItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResExchangeItems) ProtoMessage() {}

func (x *ResExchangeItems) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResExchangeItems.ProtoReflect.Descriptor instead.
func (*ResExchangeItems) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{5}
}

func (x *ResExchangeItems) GetAddItems() []*Item {
	if x != nil {
		return x.AddItems
	}
	return nil
}

func (x *ResExchangeItems) GetDelItems() []*Item {
	if x != nil {
		return x.DelItems
	}
	return nil
}

func (x *ResExchangeItems) GetUpdateItems() []*Item {
	if x != nil {
		return x.UpdateItems
	}
	return nil
}

type ResGetEquips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseEquips []*BaseEquip `protobuf:"bytes,1,rep,name=base_equips,json=baseEquips,proto3" json:"base_equips,omitempty"`
	NftEquips  []*NFTEquip  `protobuf:"bytes,2,rep,name=nft_equips,json=nftEquips,proto3" json:"nft_equips,omitempty"`
}

func (x *ResGetEquips) Reset() {
	*x = ResGetEquips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetEquips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetEquips) ProtoMessage() {}

func (x *ResGetEquips) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetEquips.ProtoReflect.Descriptor instead.
func (*ResGetEquips) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{6}
}

func (x *ResGetEquips) GetBaseEquips() []*BaseEquip {
	if x != nil {
		return x.BaseEquips
	}
	return nil
}

func (x *ResGetEquips) GetNftEquips() []*NFTEquip {
	if x != nil {
		return x.NftEquips
	}
	return nil
}

type ReqBatchAddItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddItems       map[uint64]*Items `protobuf:"bytes,1,rep,name=add_items,json=addItems,proto3" json:"add_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AddManas       map[uint64]uint32 `protobuf:"bytes,2,rep,name=add_manas,json=addManas,proto3" json:"add_manas,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TransReason    EItem_TransReason `protobuf:"varint,3,opt,name=trans_reason,json=transReason,proto3,enum=mpb.EItem_TransReason" json:"trans_reason,omitempty"`
	TransSubReason uint64            `protobuf:"varint,4,opt,name=trans_sub_reason,json=transSubReason,proto3" json:"trans_sub_reason,omitempty"`
}

func (x *ReqBatchAddItems) Reset() {
	*x = ReqBatchAddItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchAddItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchAddItems) ProtoMessage() {}

func (x *ReqBatchAddItems) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchAddItems.ProtoReflect.Descriptor instead.
func (*ReqBatchAddItems) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{7}
}

func (x *ReqBatchAddItems) GetAddItems() map[uint64]*Items {
	if x != nil {
		return x.AddItems
	}
	return nil
}

func (x *ReqBatchAddItems) GetAddManas() map[uint64]uint32 {
	if x != nil {
		return x.AddManas
	}
	return nil
}

func (x *ReqBatchAddItems) GetTransReason() EItem_TransReason {
	if x != nil {
		return x.TransReason
	}
	return EItem_TransReason_None
}

func (x *ReqBatchAddItems) GetTransSubReason() uint64 {
	if x != nil {
		return x.TransSubReason
	}
	return 0
}

type ResBatchAddItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddItems    map[uint64]*Items `protobuf:"bytes,1,rep,name=add_items,json=addItems,proto3" json:"add_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpdateItems map[uint64]*Items `protobuf:"bytes,2,rep,name=update_items,json=updateItems,proto3" json:"update_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResBatchAddItems) Reset() {
	*x = ResBatchAddItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBatchAddItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBatchAddItems) ProtoMessage() {}

func (x *ResBatchAddItems) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBatchAddItems.ProtoReflect.Descriptor instead.
func (*ResBatchAddItems) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{8}
}

func (x *ResBatchAddItems) GetAddItems() map[uint64]*Items {
	if x != nil {
		return x.AddItems
	}
	return nil
}

func (x *ResBatchAddItems) GetUpdateItems() map[uint64]*Items {
	if x != nil {
		return x.UpdateItems
	}
	return nil
}

type ResGetItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*Item      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	BaseEquips []*BaseEquip `protobuf:"bytes,2,rep,name=base_equips,json=baseEquips,proto3" json:"base_equips,omitempty"`
	NftEquips  []*NFTEquip  `protobuf:"bytes,3,rep,name=nft_equips,json=nftEquips,proto3" json:"nft_equips,omitempty"`
	Mana       uint32       `protobuf:"varint,4,opt,name=mana,proto3" json:"mana,omitempty"`
}

func (x *ResGetItems) Reset() {
	*x = ResGetItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_item_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetItems) ProtoMessage() {}

func (x *ResGetItems) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_item_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetItems.ProtoReflect.Descriptor instead.
func (*ResGetItems) Descriptor() ([]byte, []int) {
	return file_grpc_item_proto_rawDescGZIP(), []int{9}
}

func (x *ResGetItems) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResGetItems) GetBaseEquips() []*BaseEquip {
	if x != nil {
		return x.BaseEquips
	}
	return nil
}

func (x *ResGetItems) GetNftEquips() []*NFTEquip {
	if x != nil {
		return x.NftEquips
	}
	return nil
}

func (x *ResGetItems) GetMana() uint32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

var File_grpc_item_proto protoreflect.FileDescriptor

var file_grpc_item_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x6d, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x22,
	0x4e, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x72, 0x22,
	0x8b, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x70, 0x62,
	0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x51, 0x0a,
	0x18, 0x52, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0xff, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x61, 0x64,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x70, 0x62, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x12, 0x39, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x70, 0x62,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x26, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x64,
	0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6d, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6d, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x6e, 0x66, 0x74, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x62,
	0x2e, 0x4e, 0x46, 0x54, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x09, 0x6e, 0x66, 0x74, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x73, 0x22, 0x81, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x61, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x73, 0x12, 0x39, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x49, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x47, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d,
	0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa1, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x2f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x6e, 0x66, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x4e, 0x46, 0x54, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x52, 0x09, 0x6e, 0x66, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6e, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d,
	0x61, 0x6e, 0x61, 0x32, 0x94, 0x03, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x0e, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x10, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x0e,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x11,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x73, 0x12, 0x52, 0x0a, 0x14, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x1a, 0x1c, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x53, 0x74, 0x61, 0x72, 0x12, 0x55, 0x0a, 0x15, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x1d, 0x2e,
	0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x0d,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15, 0x2e,
	0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x6d,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_item_proto_rawDescOnce sync.Once
	file_grpc_item_proto_rawDescData = file_grpc_item_proto_rawDesc
)

func file_grpc_item_proto_rawDescGZIP() []byte {
	file_grpc_item_proto_rawDescOnce.Do(func() {
		file_grpc_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_item_proto_rawDescData)
	})
	return file_grpc_item_proto_rawDescData
}

var file_grpc_item_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_grpc_item_proto_goTypes = []interface{}{
	(*ReqUpgradeBaseEquipStar)(nil),  // 0: mpb.ReqUpgradeBaseEquipStar
	(*ResUpgradeBaseEquipStar)(nil),  // 1: mpb.ResUpgradeBaseEquipStar
	(*ReqUpgradeBaseEquipLevel)(nil), // 2: mpb.ReqUpgradeBaseEquipLevel
	(*ResUpgradeBaseEquipLevel)(nil), // 3: mpb.ResUpgradeBaseEquipLevel
	(*ReqExchangeItems)(nil),         // 4: mpb.ReqExchangeItems
	(*ResExchangeItems)(nil),         // 5: mpb.ResExchangeItems
	(*ResGetEquips)(nil),             // 6: mpb.ResGetEquips
	(*ReqBatchAddItems)(nil),         // 7: mpb.ReqBatchAddItems
	(*ResBatchAddItems)(nil),         // 8: mpb.ResBatchAddItems
	(*ResGetItems)(nil),              // 9: mpb.ResGetItems
	nil,                              // 10: mpb.ReqBatchAddItems.AddItemsEntry
	nil,                              // 11: mpb.ReqBatchAddItems.AddManasEntry
	nil,                              // 12: mpb.ResBatchAddItems.AddItemsEntry
	nil,                              // 13: mpb.ResBatchAddItems.UpdateItemsEntry
	(EItem_BaseEquipType)(0),         // 14: mpb.EItem.BaseEquipType
	(*Item)(nil),                     // 15: mpb.Item
	(EItem_TransReason)(0),           // 16: mpb.EItem.TransReason
	(*BaseEquip)(nil),                // 17: mpb.BaseEquip
	(*NFTEquip)(nil),                 // 18: mpb.NFTEquip
	(*Items)(nil),                    // 19: mpb.Items
	(*ReqUserId)(nil),                // 20: mpb.ReqUserId
}
var file_grpc_item_proto_depIdxs = []int32{
	14, // 0: mpb.ReqUpgradeBaseEquipStar.equipt_type:type_name -> mpb.EItem.BaseEquipType
	14, // 1: mpb.ReqUpgradeBaseEquipLevel.equipt_type:type_name -> mpb.EItem.BaseEquipType
	15, // 2: mpb.ReqExchangeItems.add_items:type_name -> mpb.Item
	15, // 3: mpb.ReqExchangeItems.del_items:type_name -> mpb.Item
	16, // 4: mpb.ReqExchangeItems.trans_reason:type_name -> mpb.EItem.TransReason
	15, // 5: mpb.ResExchangeItems.add_items:type_name -> mpb.Item
	15, // 6: mpb.ResExchangeItems.del_items:type_name -> mpb.Item
	15, // 7: mpb.ResExchangeItems.update_items:type_name -> mpb.Item
	17, // 8: mpb.ResGetEquips.base_equips:type_name -> mpb.BaseEquip
	18, // 9: mpb.ResGetEquips.nft_equips:type_name -> mpb.NFTEquip
	10, // 10: mpb.ReqBatchAddItems.add_items:type_name -> mpb.ReqBatchAddItems.AddItemsEntry
	11, // 11: mpb.ReqBatchAddItems.add_manas:type_name -> mpb.ReqBatchAddItems.AddManasEntry
	16, // 12: mpb.ReqBatchAddItems.trans_reason:type_name -> mpb.EItem.TransReason
	12, // 13: mpb.ResBatchAddItems.add_items:type_name -> mpb.ResBatchAddItems.AddItemsEntry
	13, // 14: mpb.ResBatchAddItems.update_items:type_name -> mpb.ResBatchAddItems.UpdateItemsEntry
	15, // 15: mpb.ResGetItems.items:type_name -> mpb.Item
	17, // 16: mpb.ResGetItems.base_equips:type_name -> mpb.BaseEquip
	18, // 17: mpb.ResGetItems.nft_equips:type_name -> mpb.NFTEquip
	19, // 18: mpb.ReqBatchAddItems.AddItemsEntry.value:type_name -> mpb.Items
	19, // 19: mpb.ResBatchAddItems.AddItemsEntry.value:type_name -> mpb.Items
	19, // 20: mpb.ResBatchAddItems.UpdateItemsEntry.value:type_name -> mpb.Items
	20, // 21: mpb.ItemService.GetItems:input_type -> mpb.ReqUserId
	20, // 22: mpb.ItemService.GetEquips:input_type -> mpb.ReqUserId
	0,  // 23: mpb.ItemService.UpgradeBaseEquipStar:input_type -> mpb.ReqUpgradeBaseEquipStar
	2,  // 24: mpb.ItemService.UpgradeBaseEquipLevel:input_type -> mpb.ReqUpgradeBaseEquipLevel
	4,  // 25: mpb.ItemService.ExchangeItems:input_type -> mpb.ReqExchangeItems
	7,  // 26: mpb.ItemService.BatchAddItems:input_type -> mpb.ReqBatchAddItems
	9,  // 27: mpb.ItemService.GetItems:output_type -> mpb.ResGetItems
	6,  // 28: mpb.ItemService.GetEquips:output_type -> mpb.ResGetEquips
	1,  // 29: mpb.ItemService.UpgradeBaseEquipStar:output_type -> mpb.ResUpgradeBaseEquipStar
	3,  // 30: mpb.ItemService.UpgradeBaseEquipLevel:output_type -> mpb.ResUpgradeBaseEquipLevel
	5,  // 31: mpb.ItemService.ExchangeItems:output_type -> mpb.ResExchangeItems
	8,  // 32: mpb.ItemService.BatchAddItems:output_type -> mpb.ResBatchAddItems
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_grpc_item_proto_init() }
func file_grpc_item_proto_init() {
	if File_grpc_item_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grpc_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpgradeBaseEquipStar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpgradeBaseEquipStar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpgradeBaseEquipLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpgradeBaseEquipLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqExchangeItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResExchangeItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetEquips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchAddItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBatchAddItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_item_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_item_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_item_proto_goTypes,
		DependencyIndexes: file_grpc_item_proto_depIdxs,
		MessageInfos:      file_grpc_item_proto_msgTypes,
	}.Build()
	File_grpc_item_proto = out.File
	file_grpc_item_proto_rawDesc = nil
	file_grpc_item_proto_goTypes = nil
	file_grpc_item_proto_depIdxs = nil
}
