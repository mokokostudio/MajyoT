// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: resource.proto

package mpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// apiproxy
type EmailAddrRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Passwd string `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Host   string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port   string `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *EmailAddrRsc) Reset() {
	*x = EmailAddrRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailAddrRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailAddrRsc) ProtoMessage() {}

func (x *EmailAddrRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailAddrRsc.ProtoReflect.Descriptor instead.
func (*EmailAddrRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{0}
}

func (x *EmailAddrRsc) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *EmailAddrRsc) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *EmailAddrRsc) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *EmailAddrRsc) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type MoralisInfoRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *MoralisInfoRsc) Reset() {
	*x = MoralisInfoRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoralisInfoRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoralisInfoRsc) ProtoMessage() {}

func (x *MoralisInfoRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoralisInfoRsc.ProtoReflect.Descriptor instead.
func (*MoralisInfoRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{1}
}

func (x *MoralisInfoRsc) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type TGReplyRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd           string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Method        string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Text          string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Photo         string `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	GameShortName string `protobuf:"bytes,5,opt,name=game_short_name,json=gameShortName,proto3" json:"game_short_name,omitempty"`
	Url           string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TGReplyRsc) Reset() {
	*x = TGReplyRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGReplyRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGReplyRsc) ProtoMessage() {}

func (x *TGReplyRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGReplyRsc.ProtoReflect.Descriptor instead.
func (*TGReplyRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{2}
}

func (x *TGReplyRsc) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *TGReplyRsc) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TGReplyRsc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TGReplyRsc) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *TGReplyRsc) GetGameShortName() string {
	if x != nil {
		return x.GameShortName
	}
	return ""
}

func (x *TGReplyRsc) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type TGInlineKeyboardRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd          string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Row          uint32 `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Text         string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Url          string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	CallbackData string `protobuf:"bytes,5,opt,name=callback_data,json=callbackData,proto3" json:"callback_data,omitempty"`
	CallbackGame bool   `protobuf:"varint,6,opt,name=callback_game,json=callbackGame,proto3" json:"callback_game,omitempty"`
}

func (x *TGInlineKeyboardRsc) Reset() {
	*x = TGInlineKeyboardRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGInlineKeyboardRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGInlineKeyboardRsc) ProtoMessage() {}

func (x *TGInlineKeyboardRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGInlineKeyboardRsc.ProtoReflect.Descriptor instead.
func (*TGInlineKeyboardRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{3}
}

func (x *TGInlineKeyboardRsc) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *TGInlineKeyboardRsc) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *TGInlineKeyboardRsc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TGInlineKeyboardRsc) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TGInlineKeyboardRsc) GetCallbackData() string {
	if x != nil {
		return x.CallbackData
	}
	return ""
}

func (x *TGInlineKeyboardRsc) GetCallbackGame() bool {
	if x != nil {
		return x.CallbackGame
	}
	return false
}

type TGGameRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameName      string `protobuf:"bytes,1,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	GameShortName string `protobuf:"bytes,2,opt,name=game_short_name,json=gameShortName,proto3" json:"game_short_name,omitempty"`
	GameUrl       string `protobuf:"bytes,3,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`
}

func (x *TGGameRsc) Reset() {
	*x = TGGameRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGGameRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGGameRsc) ProtoMessage() {}

func (x *TGGameRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGGameRsc.ProtoReflect.Descriptor instead.
func (*TGGameRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{4}
}

func (x *TGGameRsc) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *TGGameRsc) GetGameShortName() string {
	if x != nil {
		return x.GameShortName
	}
	return ""
}

func (x *TGGameRsc) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

// nftservice
type NFTCollectionRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftType        ENFT_NFTType `protobuf:"varint,1,opt,name=nft_type,json=nftType,proto3,enum=mpb.ENFT_NFTType" json:"nft_type,omitempty"`
	CollectionHash []string     `protobuf:"bytes,2,rep,name=collection_hash,json=collectionHash,proto3" json:"collection_hash,omitempty"`
}

func (x *NFTCollectionRsc) Reset() {
	*x = NFTCollectionRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFTCollectionRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFTCollectionRsc) ProtoMessage() {}

func (x *NFTCollectionRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFTCollectionRsc.ProtoReflect.Descriptor instead.
func (*NFTCollectionRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{5}
}

func (x *NFTCollectionRsc) GetNftType() ENFT_NFTType {
	if x != nil {
		return x.NftType
	}
	return ENFT_NFTType_None
}

func (x *NFTCollectionRsc) GetCollectionHash() []string {
	if x != nil {
		return x.CollectionHash
	}
	return nil
}

type NFTConfigRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftGraphiqlQueryLimit  uint64 `protobuf:"varint,1,opt,name=nft_graphiql_query_limit,json=nftGraphiqlQueryLimit,proto3" json:"nft_graphiql_query_limit,omitempty"`
	NftGraphiqlPageNum     uint64 `protobuf:"varint,2,opt,name=nft_graphiql_page_num,json=nftGraphiqlPageNum,proto3" json:"nft_graphiql_page_num,omitempty"`
	NftTransferEvent       string `protobuf:"bytes,3,opt,name=nft_transfer_event,json=nftTransferEvent,proto3" json:"nft_transfer_event,omitempty"`
	NftBurnEvent           string `protobuf:"bytes,4,opt,name=nft_burn_event,json=nftBurnEvent,proto3" json:"nft_burn_event,omitempty"`
	NftWithdrawEvent2      string `protobuf:"bytes,5,opt,name=nft_withdraw_event2,json=nftWithdrawEvent2,proto3" json:"nft_withdraw_event2,omitempty"`
	NftDepositEvent2       string `protobuf:"bytes,6,opt,name=nft_deposit_event2,json=nftDepositEvent2,proto3" json:"nft_deposit_event2,omitempty"`
	NftBurnEvent2          string `protobuf:"bytes,7,opt,name=nft_burn_event2,json=nftBurnEvent2,proto3" json:"nft_burn_event2,omitempty"`
	NftMintEvent2          string `protobuf:"bytes,8,opt,name=nft_mint_event2,json=nftMintEvent2,proto3" json:"nft_mint_event2,omitempty"`
	NftTransferOfferEvent2 string `protobuf:"bytes,9,opt,name=nft_transfer_offer_event2,json=nftTransferOfferEvent2,proto3" json:"nft_transfer_offer_event2,omitempty"`
	NftTransferClaimEvent2 string `protobuf:"bytes,10,opt,name=nft_transfer_claim_event2,json=nftTransferClaimEvent2,proto3" json:"nft_transfer_claim_event2,omitempty"`
}

func (x *NFTConfigRsc) Reset() {
	*x = NFTConfigRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFTConfigRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFTConfigRsc) ProtoMessage() {}

func (x *NFTConfigRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFTConfigRsc.ProtoReflect.Descriptor instead.
func (*NFTConfigRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{6}
}

func (x *NFTConfigRsc) GetNftGraphiqlQueryLimit() uint64 {
	if x != nil {
		return x.NftGraphiqlQueryLimit
	}
	return 0
}

func (x *NFTConfigRsc) GetNftGraphiqlPageNum() uint64 {
	if x != nil {
		return x.NftGraphiqlPageNum
	}
	return 0
}

func (x *NFTConfigRsc) GetNftTransferEvent() string {
	if x != nil {
		return x.NftTransferEvent
	}
	return ""
}

func (x *NFTConfigRsc) GetNftBurnEvent() string {
	if x != nil {
		return x.NftBurnEvent
	}
	return ""
}

func (x *NFTConfigRsc) GetNftWithdrawEvent2() string {
	if x != nil {
		return x.NftWithdrawEvent2
	}
	return ""
}

func (x *NFTConfigRsc) GetNftDepositEvent2() string {
	if x != nil {
		return x.NftDepositEvent2
	}
	return ""
}

func (x *NFTConfigRsc) GetNftBurnEvent2() string {
	if x != nil {
		return x.NftBurnEvent2
	}
	return ""
}

func (x *NFTConfigRsc) GetNftMintEvent2() string {
	if x != nil {
		return x.NftMintEvent2
	}
	return ""
}

func (x *NFTConfigRsc) GetNftTransferOfferEvent2() string {
	if x != nil {
		return x.NftTransferOfferEvent2
	}
	return ""
}

func (x *NFTConfigRsc) GetNftTransferClaimEvent2() string {
	if x != nil {
		return x.NftTransferClaimEvent2
	}
	return ""
}

type AdminRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AdminRsc) Reset() {
	*x = AdminRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRsc) ProtoMessage() {}

func (x *AdminRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRsc.ProtoReflect.Descriptor instead.
func (*AdminRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{7}
}

func (x *AdminRsc) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AdminRsc) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// game
type PlayerInitAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrs *Attrs `protobuf:"bytes,1,opt,name=attrs,proto3" json:"attrs,omitempty"`
}

func (x *PlayerInitAttrs) Reset() {
	*x = PlayerInitAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInitAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInitAttrs) ProtoMessage() {}

func (x *PlayerInitAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInitAttrs.ProtoReflect.Descriptor instead.
func (*PlayerInitAttrs) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerInitAttrs) GetAttrs() *Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type BossRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossId         uint32         `protobuf:"varint,1,opt,name=boss_id,json=bossId,proto3" json:"boss_id,omitempty"`
	BossType       ERole_BossType `protobuf:"varint,2,opt,name=boss_type,json=bossType,proto3,enum=mpb.ERole_BossType" json:"boss_type,omitempty"`
	Class          uint32         `protobuf:"varint,3,opt,name=class,proto3" json:"class,omitempty"`
	Level          uint32         `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	LiveTime       int64          `protobuf:"varint,5,opt,name=live_time,json=liveTime,proto3" json:"live_time,omitempty"`
	PreBoss        uint32         `protobuf:"varint,6,opt,name=pre_boss,json=preBoss,proto3" json:"pre_boss,omitempty"`
	NftEquips      []uint32       `protobuf:"varint,7,rep,packed,name=nft_equips,json=nftEquips,proto3" json:"nft_equips,omitempty"`
	NftEquipsLevel uint32         `protobuf:"varint,8,opt,name=nft_equips_level,json=nftEquipsLevel,proto3" json:"nft_equips_level,omitempty"`
	EnergyCost     uint32         `protobuf:"varint,9,opt,name=energy_cost,json=energyCost,proto3" json:"energy_cost,omitempty"`
	Attrs          *Attrs         `protobuf:"bytes,10,opt,name=attrs,proto3" json:"attrs,omitempty"`
	WinDmgRate     uint64         `protobuf:"varint,11,opt,name=win_dmg_rate,json=winDmgRate,proto3" json:"win_dmg_rate,omitempty"`
	FirstWinAwards []*AwardRsc    `protobuf:"bytes,12,rep,name=first_win_awards,json=firstWinAwards,proto3" json:"first_win_awards,omitempty"`
	Awards         []*AwardRsc    `protobuf:"bytes,13,rep,name=awards,proto3" json:"awards,omitempty"`
	FinderAwards   []*AwardRsc    `protobuf:"bytes,14,rep,name=finder_awards,json=finderAwards,proto3" json:"finder_awards,omitempty"`
	KillerAwards   []*AwardRsc    `protobuf:"bytes,15,rep,name=killer_awards,json=killerAwards,proto3" json:"killer_awards,omitempty"`
	DmgAwards      []*AwardRsc    `protobuf:"bytes,16,rep,name=dmg_awards,json=dmgAwards,proto3" json:"dmg_awards,omitempty"`
	DmgAwardsCoe1  uint64         `protobuf:"varint,17,opt,name=dmg_awards_coe1,json=dmgAwardsCoe1,proto3" json:"dmg_awards_coe1,omitempty"`
	DmgAwardsCoe2  uint64         `protobuf:"varint,18,opt,name=dmg_awards_coe2,json=dmgAwardsCoe2,proto3" json:"dmg_awards_coe2,omitempty"`
}

func (x *BossRsc) Reset() {
	*x = BossRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossRsc) ProtoMessage() {}

func (x *BossRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossRsc.ProtoReflect.Descriptor instead.
func (*BossRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{9}
}

func (x *BossRsc) GetBossId() uint32 {
	if x != nil {
		return x.BossId
	}
	return 0
}

func (x *BossRsc) GetBossType() ERole_BossType {
	if x != nil {
		return x.BossType
	}
	return ERole_BossType_Normal
}

func (x *BossRsc) GetClass() uint32 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *BossRsc) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *BossRsc) GetLiveTime() int64 {
	if x != nil {
		return x.LiveTime
	}
	return 0
}

func (x *BossRsc) GetPreBoss() uint32 {
	if x != nil {
		return x.PreBoss
	}
	return 0
}

func (x *BossRsc) GetNftEquips() []uint32 {
	if x != nil {
		return x.NftEquips
	}
	return nil
}

func (x *BossRsc) GetNftEquipsLevel() uint32 {
	if x != nil {
		return x.NftEquipsLevel
	}
	return 0
}

func (x *BossRsc) GetEnergyCost() uint32 {
	if x != nil {
		return x.EnergyCost
	}
	return 0
}

func (x *BossRsc) GetAttrs() *Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *BossRsc) GetWinDmgRate() uint64 {
	if x != nil {
		return x.WinDmgRate
	}
	return 0
}

func (x *BossRsc) GetFirstWinAwards() []*AwardRsc {
	if x != nil {
		return x.FirstWinAwards
	}
	return nil
}

func (x *BossRsc) GetAwards() []*AwardRsc {
	if x != nil {
		return x.Awards
	}
	return nil
}

func (x *BossRsc) GetFinderAwards() []*AwardRsc {
	if x != nil {
		return x.FinderAwards
	}
	return nil
}

func (x *BossRsc) GetKillerAwards() []*AwardRsc {
	if x != nil {
		return x.KillerAwards
	}
	return nil
}

func (x *BossRsc) GetDmgAwards() []*AwardRsc {
	if x != nil {
		return x.DmgAwards
	}
	return nil
}

func (x *BossRsc) GetDmgAwardsCoe1() uint64 {
	if x != nil {
		return x.DmgAwardsCoe1
	}
	return 0
}

func (x *BossRsc) GetDmgAwardsCoe2() uint64 {
	if x != nil {
		return x.DmgAwardsCoe2
	}
	return 0
}

type HiddenBossTriggerRcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossId       uint32 `protobuf:"varint,1,opt,name=boss_id,json=bossId,proto3" json:"boss_id,omitempty"`
	TriggerRate  uint32 `protobuf:"varint,2,opt,name=trigger_rate,json=triggerRate,proto3" json:"trigger_rate,omitempty"`
	HiddenBossId uint32 `protobuf:"varint,3,opt,name=hidden_boss_id,json=hiddenBossId,proto3" json:"hidden_boss_id,omitempty"`
}

func (x *HiddenBossTriggerRcs) Reset() {
	*x = HiddenBossTriggerRcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenBossTriggerRcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenBossTriggerRcs) ProtoMessage() {}

func (x *HiddenBossTriggerRcs) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenBossTriggerRcs.ProtoReflect.Descriptor instead.
func (*HiddenBossTriggerRcs) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{10}
}

func (x *HiddenBossTriggerRcs) GetBossId() uint32 {
	if x != nil {
		return x.BossId
	}
	return 0
}

func (x *HiddenBossTriggerRcs) GetTriggerRate() uint32 {
	if x != nil {
		return x.TriggerRate
	}
	return 0
}

func (x *HiddenBossTriggerRcs) GetHiddenBossId() uint32 {
	if x != nil {
		return x.HiddenBossId
	}
	return 0
}

type GameConfigRcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnergyLimit       uint32 `protobuf:"varint,1,opt,name=energy_limit,json=energyLimit,proto3" json:"energy_limit,omitempty"`
	EnergyRecoverTime int64  `protobuf:"varint,2,opt,name=energy_recover_time,json=energyRecoverTime,proto3" json:"energy_recover_time,omitempty"`
	FightHiddenBossCd int64  `protobuf:"varint,3,opt,name=fight_hidden_boss_cd,json=fightHiddenBossCd,proto3" json:"fight_hidden_boss_cd,omitempty"`
}

func (x *GameConfigRcs) Reset() {
	*x = GameConfigRcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConfigRcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfigRcs) ProtoMessage() {}

func (x *GameConfigRcs) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfigRcs.ProtoReflect.Descriptor instead.
func (*GameConfigRcs) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{11}
}

func (x *GameConfigRcs) GetEnergyLimit() uint32 {
	if x != nil {
		return x.EnergyLimit
	}
	return 0
}

func (x *GameConfigRcs) GetEnergyRecoverTime() int64 {
	if x != nil {
		return x.EnergyRecoverTime
	}
	return 0
}

func (x *GameConfigRcs) GetFightHiddenBossCd() int64 {
	if x != nil {
		return x.FightHiddenBossCd
	}
	return 0
}

// item
type AwardRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   uint32   `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Num      uint32   `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	NumRange []uint32 `protobuf:"varint,3,rep,packed,name=num_range,json=numRange,proto3" json:"num_range,omitempty"`
}

func (x *AwardRsc) Reset() {
	*x = AwardRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardRsc) ProtoMessage() {}

func (x *AwardRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardRsc.ProtoReflect.Descriptor instead.
func (*AwardRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{12}
}

func (x *AwardRsc) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AwardRsc) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *AwardRsc) GetNumRange() []uint32 {
	if x != nil {
		return x.NumRange
	}
	return nil
}

type ItemRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     uint32     `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemType   EItem_Type `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3,enum=mpb.EItem_Type" json:"item_type,omitempty"`
	IsUnique   bool       `protobuf:"varint,3,opt,name=is_unique,json=isUnique,proto3" json:"is_unique,omitempty"`
	OriginId   uint32     `protobuf:"varint,4,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	ExpireTime int64      `protobuf:"varint,5,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
}

func (x *ItemRsc) Reset() {
	*x = ItemRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRsc) ProtoMessage() {}

func (x *ItemRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRsc.ProtoReflect.Descriptor instead.
func (*ItemRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{13}
}

func (x *ItemRsc) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemRsc) GetItemType() EItem_Type {
	if x != nil {
		return x.ItemType
	}
	return EItem_Type_None
}

func (x *ItemRsc) GetIsUnique() bool {
	if x != nil {
		return x.IsUnique
	}
	return false
}

func (x *ItemRsc) GetOriginId() uint32 {
	if x != nil {
		return x.OriginId
	}
	return 0
}

func (x *ItemRsc) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type BaseEquipRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipType EItem_BaseEquipType `protobuf:"varint,1,opt,name=equip_type,json=equipType,proto3,enum=mpb.EItem_BaseEquipType" json:"equip_type,omitempty"`
	BaseAttrs *Attrs              `protobuf:"bytes,2,opt,name=base_attrs,json=baseAttrs,proto3" json:"base_attrs,omitempty"`
}

func (x *BaseEquipRsc) Reset() {
	*x = BaseEquipRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseEquipRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseEquipRsc) ProtoMessage() {}

func (x *BaseEquipRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseEquipRsc.ProtoReflect.Descriptor instead.
func (*BaseEquipRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{14}
}

func (x *BaseEquipRsc) GetEquipType() EItem_BaseEquipType {
	if x != nil {
		return x.EquipType
	}
	return EItem_BaseEquipType_None
}

func (x *BaseEquipRsc) GetBaseAttrs() *Attrs {
	if x != nil {
		return x.BaseAttrs
	}
	return nil
}

type BaseEquipLevelRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipType           EItem_BaseEquipType `protobuf:"varint,1,opt,name=equip_type,json=equipType,proto3,enum=mpb.EItem_BaseEquipType" json:"equip_type,omitempty"`
	Level               uint32              `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Attrs               *Attrs              `protobuf:"bytes,3,opt,name=attrs,proto3" json:"attrs,omitempty"`
	UpgradeConsumeItems []*Item             `protobuf:"bytes,4,rep,name=upgrade_consume_items,json=upgradeConsumeItems,proto3" json:"upgrade_consume_items,omitempty"`
	UpgradeSuccessRate  uint32              `protobuf:"varint,5,opt,name=upgrade_success_rate,json=upgradeSuccessRate,proto3" json:"upgrade_success_rate,omitempty"`
	ProtectSuccessNum   uint32              `protobuf:"varint,6,opt,name=protect_success_num,json=protectSuccessNum,proto3" json:"protect_success_num,omitempty"`
}

func (x *BaseEquipLevelRsc) Reset() {
	*x = BaseEquipLevelRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseEquipLevelRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseEquipLevelRsc) ProtoMessage() {}

func (x *BaseEquipLevelRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseEquipLevelRsc.ProtoReflect.Descriptor instead.
func (*BaseEquipLevelRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{15}
}

func (x *BaseEquipLevelRsc) GetEquipType() EItem_BaseEquipType {
	if x != nil {
		return x.EquipType
	}
	return EItem_BaseEquipType_None
}

func (x *BaseEquipLevelRsc) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *BaseEquipLevelRsc) GetAttrs() *Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *BaseEquipLevelRsc) GetUpgradeConsumeItems() []*Item {
	if x != nil {
		return x.UpgradeConsumeItems
	}
	return nil
}

func (x *BaseEquipLevelRsc) GetUpgradeSuccessRate() uint32 {
	if x != nil {
		return x.UpgradeSuccessRate
	}
	return 0
}

func (x *BaseEquipLevelRsc) GetProtectSuccessNum() uint32 {
	if x != nil {
		return x.ProtectSuccessNum
	}
	return 0
}

type BaseEquipStarRsc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipType           EItem_BaseEquipType `protobuf:"varint,1,opt,name=equip_type,json=equipType,proto3,enum=mpb.EItem_BaseEquipType" json:"equip_type,omitempty"`
	Star                uint32              `protobuf:"varint,2,opt,name=star,proto3" json:"star,omitempty"`
	Attrs               *Attrs              `protobuf:"bytes,3,opt,name=attrs,proto3" json:"attrs,omitempty"`
	UpgradeConsumeItems []*Item             `protobuf:"bytes,4,rep,name=upgrade_consume_items,json=upgradeConsumeItems,proto3" json:"upgrade_consume_items,omitempty"`
	UpgradeSuccessRate  uint32              `protobuf:"varint,5,opt,name=upgrade_success_rate,json=upgradeSuccessRate,proto3" json:"upgrade_success_rate,omitempty"`
	ProtectSuccessNum   uint32              `protobuf:"varint,6,opt,name=protect_success_num,json=protectSuccessNum,proto3" json:"protect_success_num,omitempty"`
}

func (x *BaseEquipStarRsc) Reset() {
	*x = BaseEquipStarRsc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseEquipStarRsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseEquipStarRsc) ProtoMessage() {}

func (x *BaseEquipStarRsc) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseEquipStarRsc.ProtoReflect.Descriptor instead.
func (*BaseEquipStarRsc) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{16}
}

func (x *BaseEquipStarRsc) GetEquipType() EItem_BaseEquipType {
	if x != nil {
		return x.EquipType
	}
	return EItem_BaseEquipType_None
}

func (x *BaseEquipStarRsc) GetStar() uint32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *BaseEquipStarRsc) GetAttrs() *Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *BaseEquipStarRsc) GetUpgradeConsumeItems() []*Item {
	if x != nil {
		return x.UpgradeConsumeItems
	}
	return nil
}

func (x *BaseEquipStarRsc) GetUpgradeSuccessRate() uint32 {
	if x != nil {
		return x.UpgradeSuccessRate
	}
	return 0
}

func (x *BaseEquipStarRsc) GetProtectSuccessNum() uint32 {
	if x != nil {
		return x.ProtectSuccessNum
	}
	return 0
}

var File_resource_proto protoreflect.FileDescriptor

var file_resource_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6d, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x29, 0x0a, 0x0e, 0x4d, 0x6f, 0x72, 0x61, 0x6c,
	0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x54, 0x47, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x73,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0xa9, 0x01, 0x0a, 0x13, 0x54, 0x47, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x09, 0x54,
	0x47, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x69, 0x0a, 0x10, 0x4e, 0x46, 0x54, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x63, 0x12, 0x2c, 0x0a, 0x08,
	0x6e, 0x66, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x4e, 0x46, 0x54, 0x2e, 0x4e, 0x46, 0x54, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6e, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x22, 0xf2, 0x03, 0x0a, 0x0c, 0x4e, 0x46, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x73, 0x63, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x66, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x6e, 0x66, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x31, 0x0a,
	0x15, 0x6e, 0x66, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x71, 0x6c, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6e, 0x66,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x71, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x66, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x66,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x6e, 0x66, 0x74, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x66, 0x74, 0x42, 0x75, 0x72, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x66, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x6e, 0x66, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x32, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6e, 0x66, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x32, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x66, 0x74, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x66, 0x74,
	0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x66,
	0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x66, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x32, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x66, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x66, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x12, 0x39, 0x0a,
	0x19, 0x6e, 0x66, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x6e, 0x66, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x22, 0x40, 0x0a, 0x08, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x20, 0x0a,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d,
	0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22,
	0xac, 0x05, 0x0a, 0x07, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x73, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x62,
	0x6f, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x52,
	0x6f, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x62, 0x6f,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x70, 0x72, 0x65, 0x42, 0x6f, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x66,
	0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09,
	0x6e, 0x66, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x66, 0x74,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x66, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x5f, 0x64, 0x6d,
	0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x69,
	0x6e, 0x44, 0x6d, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x77, 0x69, 0x6e, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73,
	0x63, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x57, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x63,
	0x52, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x63, 0x52, 0x0c,
	0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x0d,
	0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x73, 0x63, 0x52, 0x0c, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x6d, 0x67, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x63, 0x52, 0x09, 0x64, 0x6d, 0x67, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x6d, 0x67, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x65,
	0x31, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x6d, 0x67, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x43, 0x6f, 0x65, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x6d, 0x67, 0x5f, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x65, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x64, 0x6d, 0x67, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x65, 0x32, 0x22, 0x78,
	0x0a, 0x14, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x42, 0x6f, 0x73, 0x73, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x63, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x62, 0x6f, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x14, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x62, 0x6f,
	0x73, 0x73, 0x5f, 0x63, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x64, 0x22, 0x52,
	0x0a, 0x08, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x63, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x70, 0x62,
	0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x72, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x73, 0x63,
	0x12, 0x37, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6d, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x73, 0x63, 0x12, 0x37, 0x0a, 0x0a, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x15, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x70, 0x62,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x22, 0xa2, 0x02, 0x0a,
	0x10, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x52, 0x73,
	0x63, 0x12, 0x37, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x49, 0x74, 0x65,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x20,
	0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6d, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x12, 0x3d, 0x0a, 0x15, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x75,
	0x6d, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_resource_proto_rawDescOnce sync.Once
	file_resource_proto_rawDescData = file_resource_proto_rawDesc
)

func file_resource_proto_rawDescGZIP() []byte {
	file_resource_proto_rawDescOnce.Do(func() {
		file_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_proto_rawDescData)
	})
	return file_resource_proto_rawDescData
}

var file_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_resource_proto_goTypes = []interface{}{
	(*EmailAddrRsc)(nil),         // 0: mpb.EmailAddrRsc
	(*MoralisInfoRsc)(nil),       // 1: mpb.MoralisInfoRsc
	(*TGReplyRsc)(nil),           // 2: mpb.TGReplyRsc
	(*TGInlineKeyboardRsc)(nil),  // 3: mpb.TGInlineKeyboardRsc
	(*TGGameRsc)(nil),            // 4: mpb.TGGameRsc
	(*NFTCollectionRsc)(nil),     // 5: mpb.NFTCollectionRsc
	(*NFTConfigRsc)(nil),         // 6: mpb.NFTConfigRsc
	(*AdminRsc)(nil),             // 7: mpb.AdminRsc
	(*PlayerInitAttrs)(nil),      // 8: mpb.PlayerInitAttrs
	(*BossRsc)(nil),              // 9: mpb.BossRsc
	(*HiddenBossTriggerRcs)(nil), // 10: mpb.HiddenBossTriggerRcs
	(*GameConfigRcs)(nil),        // 11: mpb.GameConfigRcs
	(*AwardRsc)(nil),             // 12: mpb.AwardRsc
	(*ItemRsc)(nil),              // 13: mpb.ItemRsc
	(*BaseEquipRsc)(nil),         // 14: mpb.BaseEquipRsc
	(*BaseEquipLevelRsc)(nil),    // 15: mpb.BaseEquipLevelRsc
	(*BaseEquipStarRsc)(nil),     // 16: mpb.BaseEquipStarRsc
	(ENFT_NFTType)(0),            // 17: mpb.ENFT.NFTType
	(*Attrs)(nil),                // 18: mpb.Attrs
	(ERole_BossType)(0),          // 19: mpb.ERole.BossType
	(EItem_Type)(0),              // 20: mpb.EItem.Type
	(EItem_BaseEquipType)(0),     // 21: mpb.EItem.BaseEquipType
	(*Item)(nil),                 // 22: mpb.Item
}
var file_resource_proto_depIdxs = []int32{
	17, // 0: mpb.NFTCollectionRsc.nft_type:type_name -> mpb.ENFT.NFTType
	18, // 1: mpb.PlayerInitAttrs.attrs:type_name -> mpb.Attrs
	19, // 2: mpb.BossRsc.boss_type:type_name -> mpb.ERole.BossType
	18, // 3: mpb.BossRsc.attrs:type_name -> mpb.Attrs
	12, // 4: mpb.BossRsc.first_win_awards:type_name -> mpb.AwardRsc
	12, // 5: mpb.BossRsc.awards:type_name -> mpb.AwardRsc
	12, // 6: mpb.BossRsc.finder_awards:type_name -> mpb.AwardRsc
	12, // 7: mpb.BossRsc.killer_awards:type_name -> mpb.AwardRsc
	12, // 8: mpb.BossRsc.dmg_awards:type_name -> mpb.AwardRsc
	20, // 9: mpb.ItemRsc.item_type:type_name -> mpb.EItem.Type
	21, // 10: mpb.BaseEquipRsc.equip_type:type_name -> mpb.EItem.BaseEquipType
	18, // 11: mpb.BaseEquipRsc.base_attrs:type_name -> mpb.Attrs
	21, // 12: mpb.BaseEquipLevelRsc.equip_type:type_name -> mpb.EItem.BaseEquipType
	18, // 13: mpb.BaseEquipLevelRsc.attrs:type_name -> mpb.Attrs
	22, // 14: mpb.BaseEquipLevelRsc.upgrade_consume_items:type_name -> mpb.Item
	21, // 15: mpb.BaseEquipStarRsc.equip_type:type_name -> mpb.EItem.BaseEquipType
	18, // 16: mpb.BaseEquipStarRsc.attrs:type_name -> mpb.Attrs
	22, // 17: mpb.BaseEquipStarRsc.upgrade_consume_items:type_name -> mpb.Item
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_resource_proto_init() }
func file_resource_proto_init() {
	if File_resource_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailAddrRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoralisInfoRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGReplyRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGInlineKeyboardRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGGameRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFTCollectionRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFTConfigRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInitAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenBossTriggerRcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConfigRcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseEquipRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseEquipLevelRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseEquipStarRsc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_proto_goTypes,
		DependencyIndexes: file_resource_proto_depIdxs,
		MessageInfos:      file_resource_proto_msgTypes,
	}.Build()
	File_resource_proto = out.File
	file_resource_proto_rawDesc = nil
	file_resource_proto_goTypes = nil
	file_resource_proto_depIdxs = nil
}
