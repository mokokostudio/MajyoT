syntax = "proto3";

package mpb;

option go_package = "./mpb";

message EUser {
    enum UserState {
        UserState_Offline = 0;
        UserState_Online = 1;
        UserState_InTeam = 2;
        UserState_InGame = 3;
    }
}

message Empty {
}

message Region {
    string region = 1;
    string tcp_gateway_id = 2;
}

message Claims {
    uint64 user_id = 1;
    Region region = 2;
    string account = 3;
    string client_version = 4;
    string nickname = 5;
    string wallet_addr = 6;
}

message AdminClaims {
    string account = 1;
}

message AccountInfo {
    string account = 1; // firstname lastname
    uint64 user_id = 2;
    string nickname = 3;
    string icon = 4;
    string email = 5;
    string wallet_addr = 6;

}

message UserProfile {
    uint64 user_id = 1;
    string account = 2;
    string nickname = 3;
    uint32 icon = 4;
    uint32 icon_box = 5;
    uint32 gender = 6;
    uint32 vip = 7;
    EUser.UserState user_state = 8;
    string region = 9;
}

message UserInfo {
    uint64 user_id = 1;
    UserProfile basic_profile = 2;
}

message ReqUserId {
    uint64 user_id = 1;
}

message ReqUserIdRegion {
    uint64 user_id = 1;
    Region region = 2;
}

message EItem{
    enum Type {
        Type_None = 0;
        Type_General = 1;
        Type_BaseEquip = 2;
        Type_NFTEquip = 3;
        Type_Mana = 91;
        Type_Energy = 92;
    }

    enum ItemId {
        ItemId_None = 0;
        ItemId_Mana = 91000001;
    }

    enum DropType {
        DropType_None = 0;
        DropType_1 = 1;
        DropType_2 = 2;
        DropType_3 = 3;
    }

    enum TransReason {
        TransReason_None = 0;
        TransReason_GameFight = 1;
        TransReason_UpgradeBaseEquipStar = 2;
        TransReason_UpgradeBaseEquipStarRollback = 3;
        TransReason_UpgradeBaseEquipLevel = 4;
        TransReason_UpgradeBaseEquipLevelRollback = 5;
        TransReason_Mail = 99;
    }

    enum BaseEquipType {
        BaseEquipType_None = 0;
        BaseEquipType_Weapon = 1;
        BaseEquipType_Armor = 2;
        BaseEquipType_Helmet = 3;
        BaseEquipType_Glove = 4;
        BaseEquipType_Shoes = 5;
    }
}

message Item {
    uint32 item_id = 1;
    uint32 num = 2;
    uint64 uuid = 3;
    uint32 batch_id = 4;
    int64 expire_at = 5;
}

message Items {
    repeated Item items = 1;
}

message CAwards {
    repeated Item add_items = 1;
    repeated Item del_items = 2;
    repeated Item update_items = 3;
}

message EMail{
    enum MailType {
        MailType_None = 0;
        MailType_General = 1;
    }
    enum MailState {
        MailState_Init = 0;
        MailState_Read = 1;
        MailState_Awarded = 2;
    }
    enum MailReadOption {
        MailRead_MailIds = 0;
        MailRead_All = 1;
    }
    enum MailDelOption {
        MailDel_MailIds = 0;
        MailDel_All = 1;
        MailDel_BeenRead = 2;
    }
    enum MailGetAwardOption {
        MailGetAward_MailId = 0;
        MailGetAward_All = 1;
    }
    enum EMailType {
        EMailType_None = 0;
        EMailType_BindCode = 1;
    }
}

message Mail {
    uint64 mail_id = 1; // generated by mail service
    uint64 receiver = 2;
    uint64 sender = 3; // 0 means send by system
    int64 send_time = 4;
    EMail.MailType mail_type = 5;
    string mail_title = 6;
    map<string, string> map_datas = 7;
    repeated Item awards = 8;
    uint32 state = 9;
}

// social
message EFriend{
    enum ReplyOption {
        Reply_Accept = 0;
        Reply_Reject = 1;
    }
    enum ListSortType {
        SortType_User_Id = 0;
        SortType_Create_Time = 1;
    }
}

// nft
message ENFT {
    enum NFTType {
        NFTType_None = 0;
        NFTType_Weapon = 1;
    }
}

message AptosNFTNode {
    uint32 nft_type = 1;
    uint64 nft_id = 2;
    string metadata = 3;
}

message AptosNFTMetadata {
    uint64 nft_id = 1;
    string meta_data = 2;
}

message AptosNFTNodeV2 {
    message Properties {
        string prop1 = 1;
        string prop2 = 2;
        string quality = 3;
        string weapon_id = 4;
        string weapon_type = 5;
    }
    string collection_id = 1;
    string token_data_id = 2;
    string description = 3;
    string token_name = 4;
    uint32 token_id = 5;
    Properties token_properties = 6;
    string token_standard = 7;
    string token_uri = 8;
    string transaction_timestamp = 9;
}

message Attrs {
    uint64 hp = 1;
    uint64 atk = 2;
    int64 atk_gap = 3;
    uint64 hp_add_rate = 4;
    uint64 atk_add_rate = 5;
    uint64 atk_speed_add_rate = 6;
    uint64 cri_rate = 7;
    uint64 cri_dmg_rate = 8;
    uint64 hit_rate = 9;
    uint64 dodge_rate = 10;
    uint64 dmg_add_rate = 11;
    uint64 dmg_reduce_rate = 12;
    uint64 atk_buff_rate = 13;
    uint64 defense_buff_rate = 14;
}

message BaseEquip {
    EItem.BaseEquipType equip_type = 1;
    uint32 star = 2;
    uint32 level = 3;
    Attrs attrs = 4;
}

message NFTEquip {
    uint32 equip_id = 1; // nft equip id
    uint32 star = 3;
    uint32 level = 4;
    uint64 uuid = 5;
    string nft_id = 6;
    Attrs attrs = 7;
}

message ERole {
    enum Type {
        RoleType_Player = 0;
        RoleType_Boss = 1;
    }
    enum BossType {
        BossType_Normal = 0;
        BossType_NFT = 1;
        BossType_Hidden = 2;
    }
}

message Role {
    map<uint32, BaseEquip> base_equips = 1;// key:EItem.EquipType
}

message FightDetail {
    ERole.Type attacker_type = 1;
    ERole.Type be_attacker = 2;
    uint64 hp_before = 3;
    uint64 hp_after = 4;
    uint64 dmg = 5;
    bool is_cri = 6;
    bool is_miss = 7;
    int64 attack_time = 8; // ms
}

message HiddenBoss {
    uint32 boss_id = 1;
    uint64 boss_uuid = 2;
    uint64 hp = 3;
    uint64 finder = 4;
    int64 expire_at = 5;
}