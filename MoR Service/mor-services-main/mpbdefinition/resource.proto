syntax = "proto3";

package mpb;

import "common.proto";

option go_package = "./mpb";

// apiproxy
message EmailAddrRsc {
    string addr = 1;
    string passwd = 2;
    string host = 3;
    string port = 4;
}

message MoralisInfoRsc {
    string api_key = 1;
}

message TGReplyRsc {
    string cmd = 1;
    string method = 2;
    string text = 3;
    string photo = 4;
    string game_short_name = 5;
    string url = 6;
}

message TGInlineKeyboardRsc {
    string cmd = 1;
    uint32 row = 2;
    string text =3;
    string url = 4;
    string callback_data = 5;
    bool callback_game = 6;
}

message TGGameRsc {
    string game_name = 1;
    string game_short_name = 2;
    string game_url = 3;
}

// nftservice
message NFTCollectionRsc {
    ENFT.NFTType nft_type = 1;
    repeated string collection_hash = 2;
}

message NFTConfigRsc {
    uint64 nft_graphiql_query_limit = 1;
    uint64 nft_graphiql_page_num = 2;
    string nft_transfer_event = 3;
    string nft_burn_event = 4;
    string nft_withdraw_event2 = 5;
    string nft_deposit_event2 = 6;
    string nft_burn_event2 = 7;
    string nft_mint_event2 = 8;
    string nft_transfer_offer_event2 = 9;
    string nft_transfer_claim_event2 = 10;
}

message AdminRsc {
    string account = 1;
    string password = 2;
}

// game
message PlayerInitAttrs {
    Attrs attrs = 1;
}

message BossRsc {
    uint32 boss_id = 1;
    ERole.BossType boss_type = 2;
    uint32 class = 3;
    uint32 level = 4;
    int64 live_time = 5;
    uint32 pre_boss = 6;
    repeated uint32 nft_equips = 7;
    uint32 nft_equips_level = 8;
    uint32 energy_cost = 9;
    Attrs attrs = 10;
    uint64 win_dmg_rate = 11;
    repeated AwardRsc first_win_awards = 12;
    repeated AwardRsc awards = 13;
    repeated AwardRsc finder_awards = 14;
    repeated AwardRsc killer_awards = 15;
    repeated AwardRsc dmg_awards = 16;
    uint64 dmg_awards_coe1 = 17;
    uint64 dmg_awards_coe2 = 18;
}

message HiddenBossTriggerRcs {
    uint32 boss_id = 1;
    uint32 trigger_rate = 2;
    uint32 hidden_boss_id = 3;
}

message GameConfigRcs {
    uint32 energy_limit = 1;
    int64 energy_recover_time = 2;
    int64 fight_hidden_boss_cd = 3;
}

// item
message AwardRsc {
    uint32 item_id = 1;
    uint32 num = 2;
    repeated uint32 num_range = 3;
}

message ItemRsc {
    uint32 item_id = 1;
    EItem.Type item_type = 2;
    bool is_unique = 3;
    uint32 origin_id = 4;
    int64 expire_time = 5;
}

message BaseEquipRsc {
    EItem.BaseEquipType equip_type = 1;
    Attrs base_attrs = 2;
}

message BaseEquipLevelRsc {
    EItem.BaseEquipType equip_type = 1;
    uint32 level = 2;
    Attrs attrs = 3;
    repeated Item upgrade_consume_items = 4;
    uint32 upgrade_success_rate = 5;
    uint32 protect_success_num = 6;
}

message BaseEquipStarRsc {
    EItem.BaseEquipType equip_type = 1;
    uint32 star = 2;
    Attrs attrs = 3;
    repeated Item upgrade_consume_items = 4;
    uint32 upgrade_success_rate = 5;
    uint32 protect_success_num = 6;
}